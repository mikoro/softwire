rwildcard = $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2)$(filter $(subst *,%,$2),$d))

SOURCE_FILES := $(call rwildcard, source/, *.d)
SOURCE_FILES += $(call rwildcard, import/, *.d)

LIBRARIES = library/glfw/windows/glfw3.a library/freetype/windows/freetype.a
RESOURCES = misc/resources/softwire.res.o

CFLAGS = -m32 -march=i386 -Wall -Werror
CFLAGS_DEBUG = $(CFLAGS) -fdebug -funittest -g
CFLAGS_RELEASE = $(CFLAGS) -frelease -fno-bounds-check -O3 -g
LFLAGS = -lopengl32 -lgdi32 -Xlinker --subsystem=windows

.PHONY: default all pre-build debug release profile clean

default: release

all: debug release profile

pre-build:
ifeq "$(wildcard bin)" ""
	@mkdir bin
	@xcopy data bin\data /S /E /I /Y > nul
	@xcopy misc\settings.json bin > nul
endif

debug: pre-build
	@echo Building (debug)
	@gdc $(CFLAGS_DEBUG) $(SOURCE_FILES) $(LIBRARIES) $(RESOURCES) -o bin/softwired.exe $(LFLAGS)

release: pre-build
	@echo Building (release)
	@gdc $(CFLAGS_RELEASE) $(SOURCE_FILES) $(LIBRARIES) $(RESOURCES) -o bin/softwire.exe $(LFLAGS)
	@strip -s bin/softwire.exe

profile: pre-build
	@echo Building (profile)
	@gdc $(CFLAGS_RELEASE) $(SOURCE_FILES) $(LIBRARIES) $(RESOURCES) -o bin/softwirep.exe $(LFLAGS)

clean:
	@echo Cleaning
ifneq "$(wildcard bin)" ""
	@rmdir /S /Q bin
endif
