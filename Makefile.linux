rwildcard = $(wildcard $1$2) $(foreach d, $(wildcard $1*), $(call rwildcard,$d/,$2))

SOURCES := $(call rwildcard, source/,*.d)
IMPORTS := $(call rwildcard, import/,*.d)
LIBRARIES = $(addprefix library/linux/, glfw3.a freetype.a)
OBJECTS = 

ARCH = i386
#ARCH = core-avx-i

CFLAGS = -m32 -march=$(ARCH) -Wall -Werror
LFLAGS = -lGL -lX11 -lXxf86vm -lXrandr -lXi -lpng -lbz2 -ldl

.PHONY: default all pre-build debug release profile clean

default: release

all: debug release profile

pre-build:
ifeq "$(wildcard build)" ""
	@echo Creating a build directory and copying files...
	@mkdir -p build
	@cp -R data/ build/
	@cp misc/settings.json build
endif

debug: pre-build
	@echo Compiling debug build...
	@gdc $(CFLAGS) -fdebug -funittest -g $(SOURCES) $(IMPORTS) $(OBJECTS) $(LIBRARIES) -o build/softwired $(LFLAGS)

release: pre-build
	@echo Compiling release build...
	@gdc $(CFLAGS) -frelease -fno-bounds-check -O3 $(SOURCES) $(IMPORTS) $(OBJECTS) $(LIBRARIES) -o build/softwire $(LFLAGS)
	@strip -s build/softwire

profile: pre-build
	@echo Compiling profile build...
	@gdc $(CFLAGS) -frelease -fno-bounds-check -O3 -g $(SOURCES) $(IMPORTS) $(OBJECTS) $(LIBRARIES) -o build/softwirep $(LFLAGS)

clean:
	@echo Cleaning...
ifneq "$(wildcard build)" ""
	@rm -rf build
endif

test:
	@echo $(IMPORTS)
